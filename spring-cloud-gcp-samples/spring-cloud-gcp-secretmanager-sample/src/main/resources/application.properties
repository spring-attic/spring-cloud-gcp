# You can directly load the secret into a variable, as in this example
# This demonstrates multiple ways of loading the same application secret using template syntax.
#
# Please refer to the Spring Cloud GCP Secret Manager reference documentation for the full protocol syntax.

# You load a secret at a specified version; the project is inferred from Application Default Credentials or
# spring.cloud.gcp.secretmanager.project-id set in bootstrap.properties.
my-app-secret-1=${sm://application-secret/latest}
my-app-secret-2=${sm://application-secret/1}

# You can also specify a secret from another project.
# example.property=${sm://MY_PROJECT/MY_SECRET_ID/MY_VERSION}

# Using SpEL, you can reference an environment variable and fallback to a secret if it is missing.
# example.secret=${MY_ENV_VARIABLE:${sm://application-secret/latest}}
